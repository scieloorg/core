# General
# ------------------------------------------------------------------------------
USE_DOCKER=yes
IPYTHONDIR=/app/.ipython
# Redis
# ------------------------------------------------------------------------------
REDIS_URL=redis://redis:6379/0

# Celery
# ------------------------------------------------------------------------------

# Flower
CELERY_FLOWER_USER=PhFRdLexbrsBvrrbSXxjcMMOcVOavCrZ
CELERY_FLOWER_PASSWORD=QgScyefPrYhHgO6onW61u0nazc5xdBuP4sM7jMRrBBFuA2RjsFhZLp7xbVYZbrwR

# Django
# ------------------------------------------------------------------------------
DJANGO_SETTINGS_MODULE=config.settings.production
DJANGO_SECRET_KEY=FMiraeekXCSl3zHfg7D4oHx7ufT46HRnwnsawKgTCC53BYajVkVzb8HhOvBOHakR"
DJANGO_ADMIN_URL=django-admin/
DJANGO_ALLOWED_HOSTS=*


# Wagtail
# ------------------------------------------------------------------------------
WAGTAIL_ADMIN_URL=admin/


# Sentry
# ------------------------------------------------------------------------------
SENTRY_DSN=


# Group and Permissions
# ------------------------------------------------------------------------------
COLLECTION_TEAM="Collection Team"
JOURNAL_TEAM="Journal Team"

# MAINTENANCE
# ------------------------------------------------------------------------------
MAINTENANCE_MODE=False
MAINTENANCE_MODE_IGNORE_SUPERUSER=True
MAINTENANCE_MODE_IGNORE_ADMIN_SITE=False

# Timeout fetch_data
# ------------------------------------------------------------------------------
FETCH_DATA_TIMEOUT=10


# --- Opções de Conexão do Banco de Dados ---
# Tempo limite para estabelecer uma conexão com o DB (em segundos)
# Exemplo: 10 segundos
DB_CONNECT_TIMEOUT=10

# --- Opções de Pool de Conexões ---
# (Aplicável se você estiver usando uma biblioteca de pool de conexões integrada ao Django,
# como django-db-connection-pool, que reconheça POOL_OPTIONS.)

# Tamanho mínimo do pool de conexões
# Exemplo: 10 conexões
DB_POOL_SIZE=10

# Número máximo de conexões extras que o pool pode criar em caso de pico
# Exemplo: 20 conexões de "overflow"
DB_MAX_OVERFLOW=20

# Tempo máximo (em segundos) que uma conexão pode viver antes de ser reciclada
# Ajuda a evitar conexões "stale" ou "bad". Exemplo: 300 segundos (5 minutos)
DB_RECYCLE=300
