# Generated by Django 4.1.7 on 2023-02-28 05:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Affiliation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("surname", models.CharField(blank=True, max_length=300, null=True)),
                ("given_name", models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=300, unique=True)),
                (
                    "affiliation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="dataset.affiliation",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Datasource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.TextField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Keyword",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Producer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=300, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Publication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("citation", models.TextField(blank=True, null=True)),
                ("url", models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Publisher",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Subject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.TextField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Dataset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                ("name", models.TextField(blank=True, null=True)),
                ("name_of_dataverse", models.TextField(blank=True, null=True)),
                ("citation", models.TextField(blank=True, null=True)),
                ("citationHtml", models.TextField(blank=True, null=True)),
                ("dataset_citation", models.TextField(blank=True, null=True)),
                ("dataset_id", models.PositiveIntegerField(blank=True, null=True)),
                ("dataset_name", models.TextField(blank=True, null=True)),
                ("dataset_persistent_id", models.TextField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "file_content_type",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("file_id", models.PositiveIntegerField(blank=True, null=True)),
                ("file_persistent_id", models.TextField(blank=True, null=True)),
                ("file_type", models.CharField(blank=True, max_length=25, null=True)),
                ("file_count", models.PositiveIntegerField(blank=True, null=True)),
                ("global_id", models.TextField(blank=True, null=True)),
                ("identifier", models.CharField(blank=True, max_length=15, null=True)),
                (
                    "identifier_of_dataverse",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("major_version", models.PositiveIntegerField(blank=True, null=True)),
                ("minor_version", models.PositiveIntegerField(blank=True, null=True)),
                ("md5", models.CharField(blank=True, max_length=32, null=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                ("size_in_bytes", models.PositiveIntegerField(blank=True, null=True)),
                ("storage_identifier", models.TextField(blank=True, null=True)),
                ("unf", models.CharField(blank=True, max_length=30, null=True)),
                ("url", models.URLField(blank=True, null=True)),
                ("version_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "version_state",
                    models.CharField(blank=True, max_length=8, null=True),
                ),
                ("authors", models.ManyToManyField(blank=True, to="dataset.author")),
                ("contacts", models.ManyToManyField(blank=True, to="dataset.contact")),
                (
                    "creator",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creator",
                    ),
                ),
                (
                    "datasources",
                    models.ManyToManyField(blank=True, to="dataset.datasource"),
                ),
                ("keywords", models.ManyToManyField(blank=True, to="dataset.keyword")),
                (
                    "producers",
                    models.ManyToManyField(blank=True, to="dataset.producer"),
                ),
                (
                    "publications",
                    models.ManyToManyField(blank=True, to="dataset.publication"),
                ),
                (
                    "publisher",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="dataset.publisher",
                    ),
                ),
                ("subjects", models.ManyToManyField(blank=True, to="dataset.subject")),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_last_mod_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updater",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Checksum",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type_field", models.CharField(blank=True, max_length=20, null=True)),
                ("value_field", models.CharField(blank=True, max_length=40, null=True)),
                (
                    "dataset",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dataset.dataset",
                    ),
                ),
            ],
        ),
    ]
